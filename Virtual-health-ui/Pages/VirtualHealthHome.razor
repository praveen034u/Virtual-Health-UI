@page "/"

@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject SecureStorageService SecureStorage
@inject MedplumWrapperApiHttpClient MedPlumHttpClient

<PageTitle>VirtualHealthHome</PageTitle>

<div class="container-fluid">
    <!-- Hero Section -->
    <section class="text-center bg-dark text-white py-5">
        <div class="container">
            <h1 class="display-4 fw-bold">Welcome to Your Health Assistant</h1>
            <p class="lead">Track your vitals and stay healthy with real-time insights.</p>
            <button @onclick="ShowLoginWidget" class="btn btn-light btn-lg mt-3">Get Started</button>
        </div>
    </section>

    <!-- Auth0 Login Widget Container -->
    <section class="py-5 text-center">
        <div id="auth0-login-container"></div>
    </section>

    <!-- Features Section -->
    <section class="py-5">
        <div class="container">
            <h2 class="text-center mb-4 text-dark">Why Choose VirtualHealth?</h2>
            <div class="row">
                <div class="col-md-4">
                    <div class="card text-center shadow-sm border-0">
                        <div class="card-body">
                            <h3 class="card-title text-primary">360° Health Insights</h3>
                            <p class="card-text">Get a unified view of your health with data from wearables, hospitals, and pharmacies.</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card text-center shadow-sm border-0">
                        <div class="card-body">
                            <h3 class="card-title text-success">AI Health Companion</h3>
                            <p class="card-text">Personalized recommendations, early risk alerts, and prescription assistance powered by Gen AI.</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card text-center shadow-sm border-0">
                        <div class="card-body">
                            <h3 class="card-title text-warning">Smart Monitoring & Reminders</h3>
                            <p class="card-text">Real-time vitals monitoring with smart medication reminders and emergency alerts.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Call-to-Action Section -->
    <section class="text-center bg-secondary text-white py-5">
        <h2 class="fw-bold">Take Control of Your Health Today!</h2>
        <p class="lead mt-2">Join VirtualHealth and get real-time insights, AI guidance, and personalized care at your fingertips.</p>
        <button @onclick="ShowLoginWidget" class="btn btn-light btn-lg mt-3 text-dark fw-semibold">
            Get Started
        </button>
    </section>
</div>

@code {

    private static NavigationManager _navigationManager;
    private static SecureStorageService _secureStorage;
    private static IJSRuntime _jsRuntime;
    private static HttpClient _httpClient;

    protected override void OnInitialized()
    {
        _navigationManager = Navigation;
        _secureStorage = SecureStorage;
        _jsRuntime = JSRuntime;
        _httpClient = MedPlumHttpClient.Client;
    }

    private async Task ShowLoginWidget()
    {
        await _jsRuntime.InvokeVoidAsync("showAuth0Login");
    }

    [JSInvokable]
    public static async Task OnAuthSuccess()
    {
        Console.WriteLine("Login successful! Redirecting to Weather page...");

        // Retrieve token from localStorage (set by JavaScript)
        var accessToken = await _secureStorage.GetItemAsync("access_token");
        var userSecureProfileJson = await _secureStorage.GetItemAsync("user_profile");

        if (string.IsNullOrEmpty(userSecureProfileJson) && string.IsNullOrEmpty(accessToken))
        {
            Console.WriteLine("User profile missing in local storage.");
            _navigationManager.NavigateTo("/", forceLoad: true);
            return;
        }

        string userId = await _secureStorage.GetSecureUserIdAsync(userSecureProfileJson);
        await _secureStorage.SetItemAsync("user_id", userId);
       
        if (string.IsNullOrEmpty(userId))
        {
            Console.WriteLine("User ID not found, redirecting to Create Profile.");
            _navigationManager.NavigateTo("/", forceLoad: true);
            return;
        }

        // Check profile from API
        //httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", accessToken);

        var response = await _httpClient.GetAsync($"/api/Medplum/patient-full-profile/{userId}");
        if (!response.IsSuccessStatusCode)
        {
            Console.WriteLine("Profile not found, redirecting to Create Profile.");
            _navigationManager.NavigateTo("/create-profile", forceLoad: true);
            return;
        }

        var profileJsonData = await response.Content.ReadAsStringAsync();
        var profile = await _secureStorage.GetUserProfileAsync(profileJsonData);

        if (profile == null)
        {
            Console.WriteLine("Invalid profile response, redirecting to Create Profile.");
            _navigationManager.NavigateTo("/create-profile", forceLoad: true);
            return;
        }
        _secureStorage.SetItemAsync("sb_user_profile", profileJsonData);

        var encodedEmail = Uri.EscapeDataString(userId);

        Console.WriteLine("Unknown role, redirecting to Create Profile.");
        _navigationManager.NavigateTo("/dashboard/" + encodedEmail.Replace(".com", ""), forceLoad: true);
           
    }

    [JSInvokable]
    public async static Task OnLogoutSuccess()
    {
        Console.WriteLine("User logged out successfully.");
        _navigationManager.NavigateTo("/", forceLoad: true);
    }
}
